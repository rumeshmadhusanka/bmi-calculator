{"version":3,"sources":["components/BmiForm/BmiForm.jsx","components/Info/Info.jsx","components/BMI.jpg","components/Info/Description.jsx","helpers/localStorage.js","components/Chart.js","components/App/App.jsx","index.js"],"names":["options","value","label","initialValues","weight","height","date","speechRecognitionOn","BmiForm","change","useState","state","setState","error","errorMsg","weightError","setWeightError","heightError","setHeightError","oldTranscript","setOldTranscript","speechValue","setSpeechValue","useSpeechSynthesis","speak","cancel","speaking","useSpeechRecognition","transcript","resetTranscript","Date","calendarDate","onChange","unit","setUnit","useEffect","fetch","mode","headers","then","res","json","data","country","console","log","includes","SpeechRecognition","abortListening","length","weightTemp","replace","dateObject","val","s","heightTemp","bmi","hinM","toFixed","text","className","Grid","container","spacing","item","xs","sm","style","marginBottom","marginTop","onClick","browserSupportsSpeechRecognition","txt","startListening","continuous","stopListening","placeholder","htmlFor","id","name","e","target","setTimeout","isNaN","parseFloat","toLocaleString","split","maxDate","type","disabled","useStyles","makeStyles","theme","root","flexGrow","paper","padding","textAlign","color","palette","secondary","backgroundColor","lightBlue","Info","deleteCard","classes","data-test","Paper","margin","src","BMIImage","alt","getData","key","localStorage","JSON","parse","getItem","err","storeData","setItem","stringify","Chart","labelData","bmiData","createRange","axis","from","to","range","axisRanges","create","endValue","axisFill","fill","fillOpacity","createRangeLabel","point","position","am4core","inside","verticalCenter","chart","am4charts","paddingRight","i","push","dateAxis","xAxes","renderer","grid","template","location","labels","valueAxis","yAxes","tooltip","minWidth","min","max","series","dataFields","dateX","valueY","square","bullets","createChild","width","stroke","strokeWidth","tooltipText","cursor","scrollbarX","dispose","App","setData","myRef","useRef","colors","sections","document","getElementsByTagName","window","addEventListener","scrollFromTop","pageYOffset","offsetTop","body","map","obj","sort","a","b","handleDelete","newState","filter","heightInM","uuidv4","newVal","len","slice","current","scrollIntoView","behavior","ref","maxHeight","overflowY","overflowX","reverse","info","direction","justify","alignItems","Description","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a2642a19.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../App/App.css';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { Grid } from '@material-ui/core'\nimport DatePicker from 'react-date-picker';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nconst options = [\n\t{ value: 'metric', label: 'Metric (kg/cm)' },\n\t{ value: 'imperial', label: 'Imperial (lb/ft)' },\n];\n\nconst initialValues = {\n\tweight: '',\n\theight: '',\n\tdate: ''\n}\n\nlet speechRecognitionOn = false;\nconst BmiForm = ({ change }) => {\n\tconst [state, setState] = useState(initialValues);\n\tconst [weightError, setWeightError] = useState({ error: false, errorMsg: \"\" })\n\tconst [heightError, setHeightError] = useState({ error: false, errorMsg: \"\" })\n\tconst [oldTranscript, setOldTranscript] = useState('');\n\tconst [speechValue, setSpeechValue] = useState(\"\");\n\tconst { speak, cancel, speaking } = useSpeechSynthesis();\n\tconst { transcript, resetTranscript } = useSpeechRecognition();\n\tconst [calendarDate, onChange] = useState(new Date());\n\tconst [unit, setUnit] = useState({ value: 'metric', label: 'Metric (kg/cm)' });\n\n\tlet heightMax = 200\n\tlet weightMax = 500\n\n\tconst selectWUnit = ()=>{\n\t\tif (unit.value===\"metric\"){\n\t\t\treturn (\"kg\")\n\t\t}else{\n\t\t\treturn (\"lb\")\n\t\t}\n\t}\n\tconst selectHUnit = ()=>{\n\t\tif (unit.value===\"metric\"){\n\t\t\treturn (\"cm\")\n\t\t}else{\n\t\t\treturn (\"ft\")\n\t\t}\n\t}\n\tconst getVoiceBtnClassName = ()=>{\n\t\tif (speechRecognitionOn){\n\t\t\treturn \"calculate-btn voice-button-on\"\n\t\t}else{\n\t\t\treturn \"calculate-btn\"\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\n\t},[speechRecognitionOn])\n\n\tuseEffect( ()=>{\n\n\t\tfetch(\"https://ipinfo.io/?token=575df63ec9a20d\",{mode:\"cors\",headers: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}}).then(res=>res.json()).then(data=> {\n\t\t\tif (data.country===\"US\"){\n\t\t\t\t//imperial system\n\t\t\t\t//change unit to imperial\n\t\t\t\tsetUnit({ value: 'imperial', label: 'Imperial (lb/ft)' })\n\t\t\t\tconsole.log(\"Using imperial unit system\");\n\t\t\t}else{\n\t\t\t\tsetUnit({ value: 'metric', label: 'Metric (kg/cm)' })\n\t\t\t\tconsole.log(\"Using metric unit system\");\n\t\t\t}\n\t\t})\n\t},[])\n\n\tuseEffect(() => {\n\t\tif (transcript === \"\" || transcript === oldTranscript) {\n\t\t\treturn;\n\t\t}\n\t\tif (transcript.includes(\"off\") || transcript.includes(\"shut\") || transcript.includes(\"kill\")||transcript.includes(\"stop\")) {\n\t\t\tSpeechRecognition.abortListening();\n\t\t\tsetOldTranscript(\"\")\n\t\t\tspeechRecognitionOn = false;\n\t\t\tsetSpeechValue(\"Speech assistant stopped\");\n\t\t}\n\t\tif (transcript.includes(\"reset\")) {\n\t\t\tsetOldTranscript(\"\")\n\t\t\tresetTranscript();\n\t\t\tsetSpeechValue(\"Reset the values\");\n\t\t}\n\t\tif (transcript.length > 100) {\n\t\t\tsetOldTranscript(\"\");\n\t\t\tresetTranscript();\n\t\t}\n\t\tif ((transcript.includes(\"kilo\") || transcript.includes(\"kg\")|| transcript.includes(\"grams\"))) {\n\t\t\tlet weightTemp = 0;\n\t\t\tweightTemp = transcript.replace(/[^0-9]/g, \"\");\n\t\t\tif (weightTemp<25 || weightTemp>300){\n\t\t\t\tsetSpeechValue(weightTemp+\" is an invalid weight. Please enter your weight again.\");\n\t\t\t\tresetTranscript();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\tweight: weightTemp,\n\t\t\t\tdateObject: new Date(calendarDate)\n\t\t\t})\n\t\t\tfunction s(val, callback = function d(){\n\t\t\t\tsetTimeout(resetTranscript,2000)}){\n\t\t\t\tsetSpeechValue(\"Your weight is \"+weightTemp+\". Now, please speak your height\");\n\t\t\t}\n\t\t\ts()\n\t\t\tresetTranscript();\n\n\t\t}\n\n\t\tif ((transcript.includes(\"cm\") || transcript.includes(\"centi\") || transcript.includes(\"meter\") ||  transcript.includes(\"CM\"))) {\n\t\t\tlet heightTemp = 1;\n\t\t\theightTemp = transcript.replace(/[^0-9]/g, \"\");\n\t\t\t// validate\n\t\t\tif (heightTemp<50 || heightTemp>250){\n\t\t\t\tsetSpeechValue(heightTemp+\" is an invalid height. Please enter your height again.\");\n\t\t\t\tresetTranscript();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\theight : heightTemp,\n\t\t\t\tdateObject: new Date(calendarDate)\n\t\t\t})\n\n\t\t\tlet bmi = 0;\n\t\t\tlet hinM = heightTemp/100;\n\t\t\tbmi = state.weight / hinM**2;\n\t\t\tbmi = bmi.toFixed(2)\n\t\t\t//todo categorize the output and read\n\t\t\tlet status = \"\"\n\t\t\tif (bmi<18.5){\n\t\t\t\tstatus = \"underweight\";\n\t\t\t}else if (bmi<25){\n\t\t\t\tstatus = \"healthy\";\n\t\t\t}else if (bmi<29){\n\t\t\t\tstatus = \"overweight\"\n\t\t\t}else if (bmi<30){\n\t\t\t\tstatus = \"obese\"\n\t\t\t}else{\n\t\t\t\tstatus = \"extremely obese\"\n\t\t\t}\n\t\t\tsetSpeechValue(\"Your height is \"+heightTemp+\". Your BMI is \"+bmi+\". According to your BMI, you are \"+status);\n\t\t\tresetTranscript();\n\t\t}\n\t\tsetOldTranscript(transcript);\n\t\tconsole.log(transcript);\n\t}, [transcript])\n\n\tuseEffect(() => {\n\t\tif (speaking) {\n\t\t\tcancel()\n\t\t}\n\t\tspeak({ text: speechValue })\n\t}, [speechValue])\n\n\tconst toggleListen = () => { //continuously listen from mic\n\n\t\tif (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n\t\t\tlet txt = \"Your Browser is not supported. Please switch to Google Chrome to enable speech support\";\n\t\t\tconsole.error(txt)\n\t\t\tsetSpeechValue(txt);\n\t\t\treturn null\n\t\t}\n\t\tspeechRecognitionOn = !speechRecognitionOn;\n\t\tif (speechRecognitionOn) {\n\t\t\tsetSpeechValue(\"Speech assistant started... Please speak your weight to calculate your B M I \");\n\t\t\treturn SpeechRecognition.startListening({ continuous: true })\n\t\t} else {\n\t\t\tspeechRecognitionOn = false;\n\t\t\tsetSpeechValue(\"Speech assistant stopped\");\n\t\t\tSpeechRecognition.stopListening();\n\t\t}\n\n\t}\n\n\n\n\tconst handleChangeWeight = e => {\n\t\tlet { value, name } = e.target;\n\t\tconsole.log(value)\n\t\tif ((value > 999 || value < 1) && value !== \"\") {\n\t\t\tsetWeightError({ error: true, errorMsg: `Enter valid weight between 1 and ${weightMax}` })\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetWeightError({ error: false, errorMsg: \"\" })\n\t\t\t}, 5000)\n\t\t}\n\t\telse if (isNaN(parseFloat(value)) && value !== \"\") {\n\t\t\tsetWeightError({ error: true, errorMsg: \"Invalid input\" })\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetWeightError({ error: false, errorMsg: \"\" })\n\t\t\t}, 5000)\n\t\t} else {\n\t\t\tsetWeightError({ error: false, errorMsg: \"\" })\n\t\t\tconst date = calendarDate.toLocaleString().split(',')[0];\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t[name]: value,\n\t\t\t\tdate,\n\t\t\t\tdateObject: new Date(calendarDate)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleChangeHeight = e => {\n\t\tlet { value, name } = e.target;\n\t\tconsole.log(value)\n\t\tif ((value > 999 || value < 1) && value !== \"\") {\n\t\t\tsetHeightError({ error: true, errorMsg: `Enter valid height between 1 and ${heightMax}` })\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetHeightError({ error: false, errorMsg: \"\" })\n\t\t\t}, 5000)\n\t\t}\n\t\telse if (isNaN(parseFloat(value)) && value !== \"\") {\n\t\t\tsetHeightError({ error: true, errorMsg: \"Invalid input\" })\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetHeightError({ error: false, errorMsg: \"\" })\n\t\t\t}, 5000)\n\t\t} else {\n\t\t\tsetHeightError({ error: false, errorMsg: \"\" })\n\t\t\tconst date = calendarDate.toLocaleString().split(',')[0];\n\t\t\tsetState({\n\t\t\t\t...state,\n\t\t\t\t[name]: value,\n\t\t\t\tdate,\n\t\t\t\tdateObject: new Date(calendarDate)\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onChangeDate = date => {\n\t\tonChange(date);\n\t\tconsole.log(date, calendarDate);\n\t  };\n\n\tconst handleSubmit = () => {\n\t\tchange(state);\n\t\tsetState(initialValues);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t<div className=\"center\">\n\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<div className='row center'>\n\t\t\t\t\t\t\t\t<h1 className='white-text' style={{marginBottom:'2px', marginTop: '60px'}}> BMI Tracker </h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h6 className='white-text'> Body mass index (BMI) Tracker tracks your BMI changes. </h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t\t<div className='voice-button'>\n\t\t\t\t\t\t\t<button className={getVoiceBtnClassName()} onClick={toggleListen}>Speech Assistant</button>\n\t\t\t\t\t\t\t<p className={\"speech-out\"}>{transcript}</p>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4} sm={4} >\n\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={4} sm={4}>\n\t\t\t\t\t\t<Dropdown options={options} onChange={setUnit} value={unit} placeholder=\"Select an option\" />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container  >\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<label htmlFor=\"weight\">Weight (in {selectWUnit()})</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"bmiform\"}\n\t\t\t\t\t\t\tid=\"weight\"\n\t\t\t\t\t\t\tname=\"weight\"\n\t\t\t\t\t\t\tplaceholder=\"Weight\"\n\t\t\t\t\t\t\tvalue={state.weight}\n\t\t\t\t\t\t\tonChange={handleChangeWeight}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className=\"error\">{weightError.errorMsg}</p>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<label htmlFor=\"height\">Height (in {selectHUnit()})</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={\"bmiform\"}\n\t\t\t\t\t\t\tid=\"height\"\n\t\t\t\t\t\t\tname=\"height\"\n\t\t\t\t\t\t\tplaceholder=\"Height\"\n\t\t\t\t\t\t\tvalue={state.height}\n\t\t\t\t\t\t\tonChange={handleChangeHeight}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p className=\"error\">{heightError.errorMsg}</p>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t\t<div className='col m12 s12'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>Date</label>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tonChange={onChangeDate}\n\t\t\t\t\t\t\t\tvalue={calendarDate}\n\t\t\t\t\t\t\t\tmaxDate={new Date()}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={12}>\n\t\t\t\t<div style={{marginTop: '30px'}}>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"bmi-btn\"\n\t\t\t\t\t\tclassName=\"calculate-btn\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tdisabled={state.weight === '' || state.height === ''}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tCalculate BMI\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nBmiForm.propTypes = {\n\tchange: PropTypes.func.isRequired\n};\n\nexport default BmiForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { lightBlue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor : lightBlue,\n  },\n}));\n\nconst Info = ({ weight, height, id, date, bmi, deleteCard }) => {\n  const classes = useStyles();\n  const handleDelete = () => {\n    deleteCard(id);\n  };\n\n  return (\n    <div className=\"col m6 s12\">\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <Grid item xs={12}>\n            <span className=\"card-title\" data-test=\"bmi\">\n              <Paper className={classes.paper}>BMI: {bmi}</Paper>  \n            </span>  \n          </Grid>\n          <Grid container spacing={3}>\n            <Grid item xs>\n              <span data-test=\"weight\">Weight: {weight} kg</span>  \n            </Grid>\n            <Grid item xs>\n              <span data-test=\"height\">Height: {height} cm</span>\n            </Grid>  \n            <Grid item xs>\n              <span data-test=\"date\">Date: {date}</span>\n            </Grid>  \n          </Grid>\n          <button className=\"delete-btn\" onClick={handleDelete}>\n            X\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInfo.propTypes = {\n  weight: PropTypes.string,\n  height: PropTypes.string,\n  id: PropTypes.string,\n  date: PropTypes.string,\n  bmi: PropTypes.string,\n  deleteCard: PropTypes.func\n};\n\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/BMI.088fd306.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { lightBlue } from '@material-ui/core/colors';\nimport BMIImage from '../BMI.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    backgroundColor : lightBlue,\n  },\n}));\n\nconst Info = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"col m12 s12\">\n      <div className=\"card blue-grey darken-1\">\n        <div className=\"card-content\">\n          <Grid item xs={12} sm={12}>\n            <span className=\"card-title\">\n              What is BMI?\n            </span>  \n          </Grid>\n          \n        <div className=\"row\" style={{marginTop:\"20px\"}}>\n            <Grid container>\n                <Grid item xs={12} sm={6}>\n                    <div style={{margin:'30px'}}>\n                        <h4>About Adult BMI</h4>\n                        <p>\n                        Body mass index (BMI) is a person’s weight in kilograms divided by the square of height in meters. BMI is an inexpensive and easy screening method for weight category—underweight, healthy weight, overweight, and obesity.\n\n                        BMI does not measure body fat directly, but BMI is moderately correlated with more direct measures of body fat 1,2,3. Furthermore, BMI appears to be as strongly correlated with various metabolic and disease outcome as are these more direct measures of body fatness\n                        </p>  \n                    </div>  \n                    <div style={{margin:\"30px\"}}>\n                        <h4>How is BMI used?</h4>\n                        <p>\n                        BMI can be a screening tool, but it does not diagnose the body fatness or health of an individual. To determine if BMI is a health risk, a healthcare provider performs further assessments. Such assessments include skinfold thickness measurements, evaluations of diet, physical activity, and family history\n                        </p>  \n                    </div>    \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <div className=\"card-image\" style={{margin:\"30px\"}}>\n                        <img src={BMIImage} alt=\"BMI\"/>\n                    </div>\n                </Grid>\n            </Grid>   \n        </div>\n          <div style={{margin:\"30px\"}}>\n            <h4>What are other ways to assess excess body fatness besides BMI?</h4>\n            <p>\n            Other methods to measure body fatness include skinfold thickness measurements (with calipers), underwater weighing, bioelectrical impedance, dual-energy x-ray absorptiometry (DXA), and isotope dilution 1,2,3. However, these methods are not always readily available, and they are either expensive or need to be conducted by highly trained personnel. Furthermore, many of these methods can be difficult to standardize across observers or machines, complicating comparisons across studies and time periods.\n            </p>  \n          </div>  \n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport default Info;\n","export const getData = (key) => {\n\tif (!localStorage) return;\n\n\ttry {\n\t\treturn JSON.parse(localStorage.getItem(key));\n\t} catch (err) {\n\t\tconsole.error(`Error getting item ${key} from localStorage`, err);\n\t}\n};\n\nexport const storeData = (key, item) => {\n\tif (!localStorage) return;\n\n\ttry {\n\t\treturn localStorage.setItem(key, JSON.stringify(item));\n\t} catch (err) {\n\t\tconsole.error(`Error storing item ${key} to localStorage`, err);\n\t}\n};\n","import React from 'react'\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\n// import am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { useEffect } from \"react\";\n\nexport default function Chart({ labelData = [], bmiData = [] }) {\n\n    useEffect(() => {\n        let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n        chart.paddingRight = 20;\n\n        let data = [];\n\n        for (let i = 0; i < labelData.length; i++) {\n            console.log(i, labelData[i])\n            const date = labelData[i].split('/')\n            data.push({ date: new Date(date[2], date[0] - 1, date[1]), name: \"name\" + i, value: bmiData[i] });\n        }\n\n        chart.data = data;\n\n        let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.renderer.grid.template.location = 0;\n        dateAxis.renderer.labels.template.fill = am4core.color(\"#ffffff\");\n\n        let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n        valueAxis.renderer.minWidth = 35;\n        valueAxis.renderer.labels.template.fill = am4core.color(\"#ffffff\");\n        valueAxis.min = 0;\n        valueAxis.max = 50;\n        // valueAxis.extraMax = 1;\n\n        let series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"date\";\n        series.dataFields.valueY = \"value\";\n\n        const bullet = series.bullets.push(new am4charts.Bullet());\n        const square = bullet.createChild(am4core.Circle);\n        square.width = 10;\n        square.height = 10;\n        square.fill = am4core.color(\"#ffffff\")\n\n        series.stroke = am4core.color(\"#ffffff\");\n        series.strokeWidth = 3;\n\n        series.tooltipText = \"{valueY.value}\";\n        chart.cursor = new am4charts.XYCursor();\n\n        let scrollbarX = new am4charts.XYChartScrollbar();\n        scrollbarX.series.push(series);\n        chart.scrollbarX = scrollbarX;\n\n        createRange(valueAxis, 0, 18.5, am4core.color(\"#b4dd1e\"));\n        createRange(valueAxis, 18.5, 25, am4core.color(\"#3BCC61\"));\n        createRange(valueAxis, 25, 30, am4core.color(\"#f6d32b\"));\n        createRange(valueAxis, 30, 35, am4core.color(\"#fb7116\"));\n        createRange(valueAxis, 35, 100, am4core.color(\"#EC1F26\"));\n\n        createRangeLabel(valueAxis, 18.5, 'Underweight', 'top')\n        createRangeLabel(valueAxis, 25, 'Healthy', 'top')\n        createRangeLabel(valueAxis, 30, 'Overweight', 'top')\n        createRangeLabel(valueAxis, 30, 'Obese', 'bottom')\n        createRangeLabel(valueAxis, 35, 'Extremely Obese', 'bottom')\n        // createRange(valueAxis, 80, 100, am4core.color(\"#\"));\n\n        return function cleanup() {\n            if (chart) {\n                chart.dispose();\n            }\n        };\n    })\n\n    function createRange(axis, from, to, color) {\n        const range = axis.axisRanges.create();\n        range.value = from;\n        range.endValue = to;\n        range.axisFill.fill = color;\n        range.axisFill.fillOpacity = 0.8;\n        range.label.disabled = true;\n    }\n\n    function createRangeLabel(axis, point, label, position){\n        const range = axis.axisRanges.create();\n        range.value = point;\n        range.label.text = label;\n        range.label.fill = am4core.color(\"#111111\");\n        range.label.inside = true;\n        range.label.verticalCenter = position;\n    }\n\n    return (\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n    )\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport '../DatePicker.css';\nimport './App.css';\nimport BmiForm from '../BmiForm/BmiForm';\nimport Info from '../Info/Info';\nimport Description from '../Info/Description';\nimport { getData, storeData } from '../../helpers/localStorage';\nimport { Grid } from '@material-ui/core'\n\nimport Chart from '../Chart'\n\nconst App = () => {\n  const initialState = () => getData('data') || [];\n  const [state, setState] = useState(initialState);\n  const [data, setData] = useState({});\n  const myRef = useRef(null)\n\n  const colors = ['', 'lightBlue', 'darkSkyBlue', 'aquamarine', 'electricBlue']\n  const sections = [...document.getElementsByTagName('section')]\n\n  window.addEventListener('scroll', function () {\n\n    const scrollFromTop = window.pageYOffset\n\n    for (let i = 0; sections.length > i; i++) {\n\n      if (scrollFromTop <= sections[i].offsetTop) {\n        document.body.className = colors[i]\n        break\n      }\n    }\n  })\n\n  useEffect(() => {\n    storeData('data', state);\n    const date = state.map(obj => obj.date);\n    const bmi = state.map(obj => obj.bmi);\n    let newData = { date, bmi };\n    setData(newData);\n    console.log(state, state.sort((a, b) => b.date - a.date));\n  }, [state]);\n\n  const executeScroll = () => myRef.current.scrollIntoView({ behavior: 'smooth' })\n\n  const handleChange = val => {\n    let heightInM = val.height / 100;\n    val.bmi = (val.weight / (heightInM * heightInM)).toFixed(2);\n    val.id = uuidv4();\n    let newVal = [...state, val];\n    let len = newVal.length;\n    if (len > 7) newVal = newVal.slice(1, len);\n    setState(newVal);\n    executeScroll()\n  };\n\n  const handleDelete = id => {\n    storeData('lastState', state);\n    let newState = state.filter(i => {\n      return i.id !== id;\n    });\n    setState(newState);\n  };\n\n  const handleUndo = () => {\n    setState(getData('lastState'));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={12}>\n\n        <section></section>\n        <Grid item xs={12} sm={12}>\n\n          <Grid item xs={12} sm={12}>\n            <div style = {{margin : '30px'}}>\n              <BmiForm change={handleChange} />\n            </div>\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n      <Grid ref={myRef} item xs={12} sm={12}>\n        <div className=\"center white-text\"><h1>{state && state.length > 0 ? `Your last BMI is: ${state.sort((a, b) => b.dateObject - a.dateObject)[0].bmi}`  : \"\"}</h1></div>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n        <Chart labelData={data.date} bmiData={data.bmi} />\n      </Grid>\n      <section></section>\n      <Grid item xs={12} sm={6}>\n        <div style={{ margin: '20px' }}>\n          <div className='row center'>\n            <h4 className='white-text'>BMI History</h4>\n          </div>\n          <div className='data-container row' style={{maxHeight:'400px', overflowY:'scroll', overflowX:'hidden'}}>\n            {state.length > 0 ? (\n              <>\n                {\n                  state.slice(0).reverse().map(info => (\n                  <Info\n                    key={info.id}\n                    id={info.id}\n                    weight={info.weight}\n                    height={info.height}\n                    date={info.date}\n                    bmi={info.bmi}\n                    deleteCard={handleDelete}\n                  />\n                ))\n\n                }\n              </>\n            ) : (\n              <div className='center white-text'>No log found</div>\n            )}\n          </div>\n        </div>\n\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\n          {getData('lastState') !== null ? (\n            <div className='center'>\n              <button className='calculate-btn' onClick={handleUndo}>\n                Undo\n              </button>\n            </div>\n          ) : (\n            ''\n          )}\n        </Grid>\n      </Grid>\n      <Grid item xs={12} sm={12}>\n      <section></section>\n        <div style = {{margin : '20px'}}>\n            <Description />\n        </div>\n\n      </Grid>\n    </Grid>\n\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}